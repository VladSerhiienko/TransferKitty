# Makefile.in generated by automake 1.16.1 from Makefile.am.
# gen.tab/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/fribidi
pkgincludedir = $(includedir)/fribidi
pkglibdir = $(libdir)/fribidi
pkglibexecdir = $(libexecdir)/fribidi
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin18.7.0
host_triplet = x86_64-apple-darwin18.7.0
EXTRA_PROGRAMS = gen-unicode-version$(EXEEXT) \
	gen-bidi-type-tab$(EXEEXT) gen-joining-type-tab$(EXEEXT) \
	gen-arabic-shaping-tab$(EXEEXT) gen-mirroring-tab$(EXEEXT) \
	gen-brackets-tab$(EXEEXT) gen-brackets-type-tab$(EXEEXT)
subdir = gen.tab
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_prog_cc_for_build.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_gen_arabic_shaping_tab_OBJECTS = gen-arabic-shaping-tab.$(OBJEXT)
gen_arabic_shaping_tab_OBJECTS = $(am_gen_arabic_shaping_tab_OBJECTS)
gen_arabic_shaping_tab_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_gen_bidi_type_tab_OBJECTS =  \
	gen_bidi_type_tab-gen-bidi-type-tab.$(OBJEXT) \
	gen_bidi_type_tab-packtab.$(OBJEXT)
gen_bidi_type_tab_OBJECTS = $(am_gen_bidi_type_tab_OBJECTS)
gen_bidi_type_tab_LDADD = $(LDADD)
am_gen_brackets_tab_OBJECTS =  \
	gen_brackets_tab-gen-brackets-tab.$(OBJEXT) \
	gen_brackets_tab-packtab.$(OBJEXT)
gen_brackets_tab_OBJECTS = $(am_gen_brackets_tab_OBJECTS)
gen_brackets_tab_LDADD = $(LDADD)
am_gen_brackets_type_tab_OBJECTS =  \
	gen_brackets_type_tab-gen-brackets-type-tab.$(OBJEXT) \
	gen_brackets_type_tab-packtab.$(OBJEXT)
gen_brackets_type_tab_OBJECTS = $(am_gen_brackets_type_tab_OBJECTS)
gen_brackets_type_tab_LDADD = $(LDADD)
am_gen_joining_type_tab_OBJECTS =  \
	gen_joining_type_tab-gen-joining-type-tab.$(OBJEXT) \
	gen_joining_type_tab-packtab.$(OBJEXT)
gen_joining_type_tab_OBJECTS = $(am_gen_joining_type_tab_OBJECTS)
gen_joining_type_tab_LDADD = $(LDADD)
am_gen_mirroring_tab_OBJECTS =  \
	gen_mirroring_tab-gen-mirroring-tab.$(OBJEXT) \
	gen_mirroring_tab-packtab.$(OBJEXT)
gen_mirroring_tab_OBJECTS = $(am_gen_mirroring_tab_OBJECTS)
gen_mirroring_tab_LDADD = $(LDADD)
am_gen_unicode_version_OBJECTS = gen-unicode-version.$(OBJEXT)
gen_unicode_version_OBJECTS = $(am_gen_unicode_version_OBJECTS)
gen_unicode_version_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/gen-arabic-shaping-tab.Po \
	./$(DEPDIR)/gen-unicode-version.Po \
	./$(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po \
	./$(DEPDIR)/gen_bidi_type_tab-packtab.Po \
	./$(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po \
	./$(DEPDIR)/gen_brackets_tab-packtab.Po \
	./$(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po \
	./$(DEPDIR)/gen_brackets_type_tab-packtab.Po \
	./$(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po \
	./$(DEPDIR)/gen_joining_type_tab-packtab.Po \
	./$(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po \
	./$(DEPDIR)/gen_mirroring_tab-packtab.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(gen_arabic_shaping_tab_SOURCES) \
	$(gen_bidi_type_tab_SOURCES) $(gen_brackets_tab_SOURCES) \
	$(gen_brackets_type_tab_SOURCES) \
	$(gen_joining_type_tab_SOURCES) $(gen_mirroring_tab_SOURCES) \
	$(gen_unicode_version_SOURCES)
DIST_SOURCES = $(gen_arabic_shaping_tab_SOURCES) \
	$(gen_bidi_type_tab_SOURCES) $(gen_brackets_tab_SOURCES) \
	$(gen_brackets_type_tab_SOURCES) \
	$(gen_joining_type_tab_SOURCES) $(gen_mirroring_tab_SOURCES) \
	$(gen_unicode_version_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} "/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/missing" aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} "/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/missing" autoconf
AUTOHEADER = ${SHELL} "/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/missing" autoheader
AUTOMAKE = ${SHELL} "/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/missing" automake-1.16
AWK = awk
BUILD_EXEEXT = 
BUILD_OBJEXT = 
CC = $(CC_FOR_BUILD)
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = $(CFLAGS_FOR_BUILD)
CFLAGS_FOR_BUILD = -g -O2 -DHAVE_CONFIG_H \
	-I$(top_builddir) -I$(top_builddir)/lib -I$(top_srcdir)/lib
CPP = gcc -E
CPPFLAGS = 
CPPFLAGS_FOR_BUILD = 
CPP_FOR_BUILD = gcc -E
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FRIBIDI_BINARY_AGE = 4
FRIBIDI_INTERFACE_AGE = 0
FRIBIDI_INTERFACE_VERSION = 4
FRIBIDI_MAJOR_VERSION = 1
FRIBIDI_MICRO_VERSION = 8
FRIBIDI_MINOR_VERSION = 0
FRIBIDI_MSVC_BUILD_PLACEHOLDER = #undef FRIBIDI_BUILT_WITH_MSVC
FRIBIDI_VERSION = 1.0.8
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LDFLAGS_FOR_BUILD = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_CURRENT_MINUS_AGE = 0
LT_SYS_LIBRARY_PATH = 
LT_VERSION_INFO = 4:0:4
MAKEINFO = ${SHELL} "/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/missing" makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = fribidi
PACKAGE_BUGREPORT = https://github.com/fribidi/fribidi/issues/new
PACKAGE_NAME = GNU FriBidi
PACKAGE_STRING = GNU FriBidi 1.0.8
PACKAGE_TARNAME = fribidi
PACKAGE_URL = http://fribidi.org/
PACKAGE_VERSION = 1.0.8
PATH_SEPARATOR = :
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIZEOF_INT = 4
STRIP = strip
VERSION = 1.0.8
abs_builddir = /Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/gen.tab
abs_srcdir = /Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/gen.tab
abs_top_builddir = /Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8
abs_top_srcdir = /Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CC_FOR_BUILD = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin18.7.0
build_alias = 
build_cpu = x86_64
build_os = darwin18.7.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin18.7.0
host_alias = 
host_cpu = x86_64
host_os = darwin18.7.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} '/Users/vserhiienko/Projects/TransferKitty/TransferKitty/TransferKitty Shared/fribidi-1.0.8/install-sh'
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
gen_unicode_version_SOURCES = gen-unicode-version.c
gen_arabic_shaping_tab_SOURCES = gen-arabic-shaping-tab.c
gen_bidi_type_tab_SOURCES = gen-bidi-type-tab.c packtab.c packtab.h
gen_joining_type_tab_SOURCES = gen-joining-type-tab.c packtab.c packtab.h
gen_mirroring_tab_SOURCES = gen-mirroring-tab.c packtab.c packtab.h
gen_brackets_tab_SOURCES = gen-brackets-tab.c packtab.c packtab.h
gen_brackets_type_tab_SOURCES = gen-brackets-type-tab.c packtab.c packtab.h
# Set CPPFLAGS explicitly for these, such that they compile packtab.c to private
# packtab.o so they don't race during parallel build from lib.
# https://github.com/fribidi/fribidi/issues/52
gen_bidi_type_tab_CPPFLAGS = $(AM_CPPFLAGS)
gen_joining_type_tab_CPPFLAGS = $(AM_CPPFLAGS)
gen_mirroring_tab_CPPFLAGS = $(AM_CPPFLAGS)
gen_brackets_tab_CPPFLAGS = $(AM_CPPFLAGS)
gen_brackets_type_tab_CPPFLAGS = $(AM_CPPFLAGS)
CLEANFILES = $(EXTRA_PROGRAMS)
DISTCLEANFILES = derived_bidi-type.tab.i
AM_CPPFLAGS = \
		-I$(top_builddir)/lib \
		-I$(top_srcdir)/lib

UCD_FILES = \
		unidata/ReadMe.txt \
		unidata/UnicodeData.txt \
		unidata/BidiMirroring.txt \
		unidata/BidiBrackets.txt \
		unidata/ArabicShaping.txt

EXTRA_DIST = $(UCD_FILES)
COMPRESSION = 2

# generate bidi-type.tab.i
gen_bidi_type_tab = gen-bidi-type-tab$(EXEEXT)

# generate joining-type.tab.i
gen_joining_type_tab = gen-joining-type-tab$(EXEEXT)

# generate arabic-shaping.tab.i
gen_arabic_shaping_tab = gen-arabic-shaping-tab$(EXEEXT)

# generate mirroring.tab.i
gen_mirroring_tab = gen-mirroring-tab$(EXEEXT)

# generate brackets.tab.i
gen_brackets_tab = gen-brackets-tab$(EXEEXT)

# generate brackets-type.tab.i
gen_brackets_type_tab = gen-brackets-type-tab$(EXEEXT)

# generate fribidi-unicode-version.h
gen_unicode_version = gen-unicode-version$(EXEEXT)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits gen.tab/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits gen.tab/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

gen-arabic-shaping-tab$(EXEEXT): $(gen_arabic_shaping_tab_OBJECTS) $(gen_arabic_shaping_tab_DEPENDENCIES) $(EXTRA_gen_arabic_shaping_tab_DEPENDENCIES) 
	@rm -f gen-arabic-shaping-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_arabic_shaping_tab_OBJECTS) $(gen_arabic_shaping_tab_LDADD) $(LIBS)

gen-bidi-type-tab$(EXEEXT): $(gen_bidi_type_tab_OBJECTS) $(gen_bidi_type_tab_DEPENDENCIES) $(EXTRA_gen_bidi_type_tab_DEPENDENCIES) 
	@rm -f gen-bidi-type-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_bidi_type_tab_OBJECTS) $(gen_bidi_type_tab_LDADD) $(LIBS)

gen-brackets-tab$(EXEEXT): $(gen_brackets_tab_OBJECTS) $(gen_brackets_tab_DEPENDENCIES) $(EXTRA_gen_brackets_tab_DEPENDENCIES) 
	@rm -f gen-brackets-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_brackets_tab_OBJECTS) $(gen_brackets_tab_LDADD) $(LIBS)

gen-brackets-type-tab$(EXEEXT): $(gen_brackets_type_tab_OBJECTS) $(gen_brackets_type_tab_DEPENDENCIES) $(EXTRA_gen_brackets_type_tab_DEPENDENCIES) 
	@rm -f gen-brackets-type-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_brackets_type_tab_OBJECTS) $(gen_brackets_type_tab_LDADD) $(LIBS)

gen-joining-type-tab$(EXEEXT): $(gen_joining_type_tab_OBJECTS) $(gen_joining_type_tab_DEPENDENCIES) $(EXTRA_gen_joining_type_tab_DEPENDENCIES) 
	@rm -f gen-joining-type-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_joining_type_tab_OBJECTS) $(gen_joining_type_tab_LDADD) $(LIBS)

gen-mirroring-tab$(EXEEXT): $(gen_mirroring_tab_OBJECTS) $(gen_mirroring_tab_DEPENDENCIES) $(EXTRA_gen_mirroring_tab_DEPENDENCIES) 
	@rm -f gen-mirroring-tab$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_mirroring_tab_OBJECTS) $(gen_mirroring_tab_LDADD) $(LIBS)

gen-unicode-version$(EXEEXT): $(gen_unicode_version_OBJECTS) $(gen_unicode_version_DEPENDENCIES) $(EXTRA_gen_unicode_version_DEPENDENCIES) 
	@rm -f gen-unicode-version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gen_unicode_version_OBJECTS) $(gen_unicode_version_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gen-arabic-shaping-tab.Po # am--include-marker
include ./$(DEPDIR)/gen-unicode-version.Po # am--include-marker
include ./$(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po # am--include-marker
include ./$(DEPDIR)/gen_bidi_type_tab-packtab.Po # am--include-marker
include ./$(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po # am--include-marker
include ./$(DEPDIR)/gen_brackets_tab-packtab.Po # am--include-marker
include ./$(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po # am--include-marker
include ./$(DEPDIR)/gen_brackets_type_tab-packtab.Po # am--include-marker
include ./$(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po # am--include-marker
include ./$(DEPDIR)/gen_joining_type_tab-packtab.Po # am--include-marker
include ./$(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po # am--include-marker
include ./$(DEPDIR)/gen_mirroring_tab-packtab.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

gen_bidi_type_tab-gen-bidi-type-tab.o: gen-bidi-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_bidi_type_tab-gen-bidi-type-tab.o -MD -MP -MF $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Tpo -c -o gen_bidi_type_tab-gen-bidi-type-tab.o `test -f 'gen-bidi-type-tab.c' || echo '$(srcdir)/'`gen-bidi-type-tab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Tpo $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po
#	$(AM_V_CC)source='gen-bidi-type-tab.c' object='gen_bidi_type_tab-gen-bidi-type-tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_bidi_type_tab-gen-bidi-type-tab.o `test -f 'gen-bidi-type-tab.c' || echo '$(srcdir)/'`gen-bidi-type-tab.c

gen_bidi_type_tab-gen-bidi-type-tab.obj: gen-bidi-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_bidi_type_tab-gen-bidi-type-tab.obj -MD -MP -MF $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Tpo -c -o gen_bidi_type_tab-gen-bidi-type-tab.obj `if test -f 'gen-bidi-type-tab.c'; then $(CYGPATH_W) 'gen-bidi-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-bidi-type-tab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Tpo $(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po
#	$(AM_V_CC)source='gen-bidi-type-tab.c' object='gen_bidi_type_tab-gen-bidi-type-tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_bidi_type_tab-gen-bidi-type-tab.obj `if test -f 'gen-bidi-type-tab.c'; then $(CYGPATH_W) 'gen-bidi-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-bidi-type-tab.c'; fi`

gen_bidi_type_tab-packtab.o: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_bidi_type_tab-packtab.o -MD -MP -MF $(DEPDIR)/gen_bidi_type_tab-packtab.Tpo -c -o gen_bidi_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_bidi_type_tab-packtab.Tpo $(DEPDIR)/gen_bidi_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_bidi_type_tab-packtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_bidi_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c

gen_bidi_type_tab-packtab.obj: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_bidi_type_tab-packtab.obj -MD -MP -MF $(DEPDIR)/gen_bidi_type_tab-packtab.Tpo -c -o gen_bidi_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_bidi_type_tab-packtab.Tpo $(DEPDIR)/gen_bidi_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_bidi_type_tab-packtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_bidi_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_bidi_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`

gen_brackets_tab-gen-brackets-tab.o: gen-brackets-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_tab-gen-brackets-tab.o -MD -MP -MF $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Tpo -c -o gen_brackets_tab-gen-brackets-tab.o `test -f 'gen-brackets-tab.c' || echo '$(srcdir)/'`gen-brackets-tab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Tpo $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po
#	$(AM_V_CC)source='gen-brackets-tab.c' object='gen_brackets_tab-gen-brackets-tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_tab-gen-brackets-tab.o `test -f 'gen-brackets-tab.c' || echo '$(srcdir)/'`gen-brackets-tab.c

gen_brackets_tab-gen-brackets-tab.obj: gen-brackets-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_tab-gen-brackets-tab.obj -MD -MP -MF $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Tpo -c -o gen_brackets_tab-gen-brackets-tab.obj `if test -f 'gen-brackets-tab.c'; then $(CYGPATH_W) 'gen-brackets-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-brackets-tab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Tpo $(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po
#	$(AM_V_CC)source='gen-brackets-tab.c' object='gen_brackets_tab-gen-brackets-tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_tab-gen-brackets-tab.obj `if test -f 'gen-brackets-tab.c'; then $(CYGPATH_W) 'gen-brackets-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-brackets-tab.c'; fi`

gen_brackets_tab-packtab.o: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_tab-packtab.o -MD -MP -MF $(DEPDIR)/gen_brackets_tab-packtab.Tpo -c -o gen_brackets_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_tab-packtab.Tpo $(DEPDIR)/gen_brackets_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_brackets_tab-packtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c

gen_brackets_tab-packtab.obj: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_tab-packtab.obj -MD -MP -MF $(DEPDIR)/gen_brackets_tab-packtab.Tpo -c -o gen_brackets_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_tab-packtab.Tpo $(DEPDIR)/gen_brackets_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_brackets_tab-packtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`

gen_brackets_type_tab-gen-brackets-type-tab.o: gen-brackets-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_type_tab-gen-brackets-type-tab.o -MD -MP -MF $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Tpo -c -o gen_brackets_type_tab-gen-brackets-type-tab.o `test -f 'gen-brackets-type-tab.c' || echo '$(srcdir)/'`gen-brackets-type-tab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Tpo $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po
#	$(AM_V_CC)source='gen-brackets-type-tab.c' object='gen_brackets_type_tab-gen-brackets-type-tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_type_tab-gen-brackets-type-tab.o `test -f 'gen-brackets-type-tab.c' || echo '$(srcdir)/'`gen-brackets-type-tab.c

gen_brackets_type_tab-gen-brackets-type-tab.obj: gen-brackets-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_type_tab-gen-brackets-type-tab.obj -MD -MP -MF $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Tpo -c -o gen_brackets_type_tab-gen-brackets-type-tab.obj `if test -f 'gen-brackets-type-tab.c'; then $(CYGPATH_W) 'gen-brackets-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-brackets-type-tab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Tpo $(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po
#	$(AM_V_CC)source='gen-brackets-type-tab.c' object='gen_brackets_type_tab-gen-brackets-type-tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_type_tab-gen-brackets-type-tab.obj `if test -f 'gen-brackets-type-tab.c'; then $(CYGPATH_W) 'gen-brackets-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-brackets-type-tab.c'; fi`

gen_brackets_type_tab-packtab.o: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_type_tab-packtab.o -MD -MP -MF $(DEPDIR)/gen_brackets_type_tab-packtab.Tpo -c -o gen_brackets_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_type_tab-packtab.Tpo $(DEPDIR)/gen_brackets_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_brackets_type_tab-packtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c

gen_brackets_type_tab-packtab.obj: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_brackets_type_tab-packtab.obj -MD -MP -MF $(DEPDIR)/gen_brackets_type_tab-packtab.Tpo -c -o gen_brackets_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_brackets_type_tab-packtab.Tpo $(DEPDIR)/gen_brackets_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_brackets_type_tab-packtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_brackets_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_brackets_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`

gen_joining_type_tab-gen-joining-type-tab.o: gen-joining-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_joining_type_tab-gen-joining-type-tab.o -MD -MP -MF $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Tpo -c -o gen_joining_type_tab-gen-joining-type-tab.o `test -f 'gen-joining-type-tab.c' || echo '$(srcdir)/'`gen-joining-type-tab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Tpo $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po
#	$(AM_V_CC)source='gen-joining-type-tab.c' object='gen_joining_type_tab-gen-joining-type-tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_joining_type_tab-gen-joining-type-tab.o `test -f 'gen-joining-type-tab.c' || echo '$(srcdir)/'`gen-joining-type-tab.c

gen_joining_type_tab-gen-joining-type-tab.obj: gen-joining-type-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_joining_type_tab-gen-joining-type-tab.obj -MD -MP -MF $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Tpo -c -o gen_joining_type_tab-gen-joining-type-tab.obj `if test -f 'gen-joining-type-tab.c'; then $(CYGPATH_W) 'gen-joining-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-joining-type-tab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Tpo $(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po
#	$(AM_V_CC)source='gen-joining-type-tab.c' object='gen_joining_type_tab-gen-joining-type-tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_joining_type_tab-gen-joining-type-tab.obj `if test -f 'gen-joining-type-tab.c'; then $(CYGPATH_W) 'gen-joining-type-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-joining-type-tab.c'; fi`

gen_joining_type_tab-packtab.o: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_joining_type_tab-packtab.o -MD -MP -MF $(DEPDIR)/gen_joining_type_tab-packtab.Tpo -c -o gen_joining_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_joining_type_tab-packtab.Tpo $(DEPDIR)/gen_joining_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_joining_type_tab-packtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_joining_type_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c

gen_joining_type_tab-packtab.obj: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_joining_type_tab-packtab.obj -MD -MP -MF $(DEPDIR)/gen_joining_type_tab-packtab.Tpo -c -o gen_joining_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_joining_type_tab-packtab.Tpo $(DEPDIR)/gen_joining_type_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_joining_type_tab-packtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_joining_type_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_joining_type_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`

gen_mirroring_tab-gen-mirroring-tab.o: gen-mirroring-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_mirroring_tab-gen-mirroring-tab.o -MD -MP -MF $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Tpo -c -o gen_mirroring_tab-gen-mirroring-tab.o `test -f 'gen-mirroring-tab.c' || echo '$(srcdir)/'`gen-mirroring-tab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Tpo $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po
#	$(AM_V_CC)source='gen-mirroring-tab.c' object='gen_mirroring_tab-gen-mirroring-tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_mirroring_tab-gen-mirroring-tab.o `test -f 'gen-mirroring-tab.c' || echo '$(srcdir)/'`gen-mirroring-tab.c

gen_mirroring_tab-gen-mirroring-tab.obj: gen-mirroring-tab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_mirroring_tab-gen-mirroring-tab.obj -MD -MP -MF $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Tpo -c -o gen_mirroring_tab-gen-mirroring-tab.obj `if test -f 'gen-mirroring-tab.c'; then $(CYGPATH_W) 'gen-mirroring-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-mirroring-tab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Tpo $(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po
#	$(AM_V_CC)source='gen-mirroring-tab.c' object='gen_mirroring_tab-gen-mirroring-tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_mirroring_tab-gen-mirroring-tab.obj `if test -f 'gen-mirroring-tab.c'; then $(CYGPATH_W) 'gen-mirroring-tab.c'; else $(CYGPATH_W) '$(srcdir)/gen-mirroring-tab.c'; fi`

gen_mirroring_tab-packtab.o: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_mirroring_tab-packtab.o -MD -MP -MF $(DEPDIR)/gen_mirroring_tab-packtab.Tpo -c -o gen_mirroring_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_mirroring_tab-packtab.Tpo $(DEPDIR)/gen_mirroring_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_mirroring_tab-packtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_mirroring_tab-packtab.o `test -f 'packtab.c' || echo '$(srcdir)/'`packtab.c

gen_mirroring_tab-packtab.obj: packtab.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gen_mirroring_tab-packtab.obj -MD -MP -MF $(DEPDIR)/gen_mirroring_tab-packtab.Tpo -c -o gen_mirroring_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gen_mirroring_tab-packtab.Tpo $(DEPDIR)/gen_mirroring_tab-packtab.Po
#	$(AM_V_CC)source='packtab.c' object='gen_mirroring_tab-packtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gen_mirroring_tab_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gen_mirroring_tab-packtab.obj `if test -f 'packtab.c'; then $(CYGPATH_W) 'packtab.c'; else $(CYGPATH_W) '$(srcdir)/packtab.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/gen-arabic-shaping-tab.Po
	-rm -f ./$(DEPDIR)/gen-unicode-version.Po
	-rm -f ./$(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_bidi_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_joining_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po
	-rm -f ./$(DEPDIR)/gen_mirroring_tab-packtab.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/gen-arabic-shaping-tab.Po
	-rm -f ./$(DEPDIR)/gen-unicode-version.Po
	-rm -f ./$(DEPDIR)/gen_bidi_type_tab-gen-bidi-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_bidi_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_tab-gen-brackets-tab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_type_tab-gen-brackets-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_brackets_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_joining_type_tab-gen-joining-type-tab.Po
	-rm -f ./$(DEPDIR)/gen_joining_type_tab-packtab.Po
	-rm -f ./$(DEPDIR)/gen_mirroring_tab-gen-mirroring-tab.Po
	-rm -f ./$(DEPDIR)/gen_mirroring_tab-packtab.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


bidi-type.tab.i: \
		unidata/UnicodeData.txt \
		fribidi-unicode-version.h \
		$(gen_bidi_type_tab)
	$(AM_V_GEN) ./$(gen_bidi_type_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

joining-type.tab.i: \
		unidata/UnicodeData.txt \
		unidata/ArabicShaping.txt \
		fribidi-unicode-version.h \
		$(gen_joining_type_tab)
	$(AM_V_GEN) ./$(gen_joining_type_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

arabic-shaping.tab.i: \
		unidata/UnicodeData.txt \
		fribidi-unicode-version.h \
		$(gen_arabic_shaping_tab)
	$(AM_V_GEN) ./$(gen_arabic_shaping_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

mirroring.tab.i: \
		unidata/BidiMirroring.txt \
		fribidi-unicode-version.h \
		$(gen_mirroring_tab)
	$(AM_V_GEN) ./$(gen_mirroring_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

brackets.tab.i: \
		unidata/BidiBrackets.txt \
		unidata/UnicodeData.txt \
		fribidi-unicode-version.h \
		$(gen_brackets_tab)
	$(AM_V_GEN) ./$(gen_brackets_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

brackets-type.tab.i: \
		unidata/BidiBrackets.txt \
		fribidi-unicode-version.h \
		$(gen_brackets_type_tab)
	$(AM_V_GEN) ./$(gen_brackets_type_tab) $(COMPRESSION) $^ > $@ \
	|| ($(RM) $@ && false)

fribidi-unicode-version.h: \
		unidata/ReadMe.txt \
		unidata/BidiMirroring.txt \
		$(gen_unicode_version)
	$(AM_V_GEN) ./$(gen_unicode_version) $^ > $@ \
	|| ($(RM) $@ && false)

# generate all generators:
gen: $(EXTRA_PROGRAMS)

$(top_builddir)/config.h: $(top_srcdir)/config.h.in
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) config.h

$(top_builddir)/lib/fribidi-config.h: $(top_srcdir)/lib/fribidi-config.h.in
	cd $(top_builddir)/lib && $(MAKE) $(AM_MAKEFLAGS) fribidi-config.h

.PHONY: gen

.DELETE_ON_ERROR:

-include $(top_srcdir)/git.mk

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
